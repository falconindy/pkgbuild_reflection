#!/bin/bash

m4_include(pkgbuild_introspection)

makepkg_args=('--source')

tmpdirs=()
trap 'rm -rf "${tmpdirs[@]}"' EXIT

error() {
  printf "ERROR: $1\n" "${@:2}" >&2
}

die() {
  error "$@"
  exit 1
}

usage() {
  printf '%s\n' \
      'mkaurball v@VERSION@' \
      '' \
      'mkaurball wraps the process of creating a source tarball with an' \
      '.AURINFO file, suitable for submission to the AUR.' \
      '' \
      'Usage: mkaurball [options]' \
      '' \
      '    -a <file>  package <file> as .AURINFO' \
      '    -e         edit .AURINFO before repackaging' \
      '    -f         pass the --force flag to makepkg' \
      '    -r         pass the --asroot flag to makepkg' \
      '    -h         display this help message and exit'
}

mktempdir() {
  local dir

  dir=$(mktemp -d --tmpdir mkaurball.XXXXXX) || return 1
  tmpdirs+=("$dir")

  printf '%s\n' "$dir"
}

fakeroot() {
  if type -p fakeroot >/dev/null; then
    command fakeroot "$@"
  else
    "$@"
  fi
}

mkaurball() {
  local tarball_basename= tarball_fullname= tmpdir=

  if ! . ./PKGBUILD; then
    die 'Unable to source %s/PKGBUILD' "$PWD"
  fi

  if ! makepkg "${makepkg_args[@]}"; then
    die 'makepkg exited non-zero'
  fi

  tarball_basename=${pkgbase:-$pkgname}
  tarball_fullname=$tarball_basename-${epoch:+$epoch:}$pkgver-$pkgrel.src.tar.gz

  if [[ ! -f $tarball_fullname ]]; then
    die 'Expected tarball name not found: %s' "$tarball_fullname"
  fi

  tmpdir=$(mktempdir) || return

  if ! bsdtar -C "$tmpdir" -xf "$tarball_fullname"; then
    die 'Failed to unpack tarball'
  fi

  if [[ $srcinfo_path ]]; then
    # TODO: validate the .AURINFO
    if ! cp "$srcinfo_path" "$tmpdir/$tarball_basename/.AURINFO"; then
      die 'Failed to add %s to tarball' "$srcinfo_path"
    fi
  else
    if ! srcinfo_create >"$tmpdir/$tarball_basename/.AURINFO"; then
      die 'Failed to write .AURINFO'
    fi
  fi

  if (( edit_srcinfo )); then
    # TODO: validate the .AURINFO
    "${VISUAL:-${EDITOR:-vi}}" "$tmpdir/$tarball_basename/.AURINFO"
  fi

  if ! fakeroot bsdtar -C "$tmpdir" -czLf "$tarball_fullname" "$tarball_basename"; then
    die 'Failed to repack tarball'
  fi
}

while getopts ':a:efrh' flag; do
  case $flag in
    a)
      srcinfo_path=$OPTARG
      ;;
    e)
      edit_srcinfo=1
      ;;
    f)
      makepkg_args+=('--force')
      ;;
    r)
      makepkg_args+=('--asroot')
      ;;
    h)
      usage
      exit 0
      ;;
    :)
      die "option '-%s' requires an argument" "$OPTARG"
      ;;
    \?)
      die "invalid option -- '-%s' (use -h for help)" "$OPTARG"
      ;;
  esac
done

export BUILDDIR=$(mktempdir)

mkaurball

# vim: set et ts=2 sw=2:
